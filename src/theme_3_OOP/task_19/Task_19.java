package theme_3_OOP.task_19;

public class Task_19 {
    public static void main(String[] args) {
//  1. Напишите программу, в которой переменная x объявляется 10 раз
        int y = 0;
        System.out.println("y between 0 and 9 inclusive");
        while (y < 10) {
            double x = Math.sqrt(y);
            System.out.println("root of " + y + " = " + x);
            y++;
        }

//  2. Напишите программу из одной строчки, в которой переменная x объявляется 10 раз
        twoPow();
//    3. Что такое область видимости переменной? Что происходит с переменной,
//    после того, как начал выполняться код вне ее области видимости?
//       Область видимости переменной - часть программы, в пределах которой (пока выполняется участок
//       кода этой части программы) существует переменная. После того, как начал выполняться код вне ее области
//       видимости, переменная стирается из оперативной памяти.

//    4. Зачем нужна область видимости переменной? Было бы удобно, если б переменная, объявленная хоть где,
//    была доступна в любом другом месте?
        //Область видимости изолирует переменные. Благодаря этому разные области видимости могут содержать
        // переменные с одинаковыми именами, что позволяет не придумывать для каждой переменной свое имя, а также
        // освобождается место в оперативной памяти после удаления уже исчезнувшей из области видимости переменной.
        // если б переменная, объявленная хоть где, была доступна в любом другом месте, то уже нельзя было бы называть
        // похожие переменные такими же именами, что очень неудобно, т.к. будет очень много переменных с разными именами,
        // в которых легко запутаться

    }
    static void twoPow() {
        for (int i = 0; i < 10; i++) {
            int x = (int) Math.pow(2, i);
            System.out.println("2 to the power of "+ i + " = " + x);
        }
    }
}
